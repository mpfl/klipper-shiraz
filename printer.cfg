# This file contains the Klipper configuration for Voron V0.383 codename "shiraz"
#
# The controlling Pi is connected to a Bigtreetech SKR mini E3 v2.0 via UART
# on the SKR's TFT pins. The following configuration options must be selected
# in make menuconfig before compiling the firmware: 
#
#  [*] Enable extra low-level configuration options
#     Micro-controller Architecture (STMicroelectronics STM32)  --->
#     Processor model (STM32F103)  --->
#     Bootloader offset (28KiB bootloader)  --->
#     Clock Reference (8 MHz crystal)  --->
#     Communication interface (Serial (on USART2 PA3/PA2))  --->
# (250000) Baud rate for serial port
# [ ] Specify a custom step pulse duration
# (!PA14) GPIO pins to set at micro-controller startup
#
# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.
#
# After the first flash, subsequent firmware flashes can be undertaken with
# the klipper/scripts/flash-sdcard.sh

# See the example.cfg file for a description of available parameters.

[mcu]
##	Obtain mcu value by "ls -l /dev/serial/by-id/" if you're using USB
# serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_35FFD9054246303208630257-if00
# But we're not using USB, so instead we configure:
serial: /dev/ttyAMA0
# baud: 250000
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[display]
# The BTT SKR Mini E3 V2.0 has an i2c bus on EXT
# Pin PB8 is SCL
# Pin PB9 is SDA
lcd_type: ssd1306
i2c_mcu: mcu
i2c_bus: i2c1a

[display_status]

[force_move]
enable_force_move: true

[stepper_x]
step_pin: PB13
dir_pin: PB12	# Remove the ! if stepper is moving the opposite direction
enable_pin: !PB14
rotation_distance: 40
microsteps: 16
endstop_pin: PC0 
position_endstop: 120
position_max: 120
homing_speed: 30   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: True
run_current: .25
hold_current: .25
sense_resistor: 0.110
stealthchop_threshold: 500

[stepper_y]
step_pin: PB10
dir_pin: PB2	# Remove the ! if stepper is moving the opposite direction
enable_pin: !PB11
rotation_distance: 40
microsteps: 16
endstop_pin: PC1
position_endstop: 120
position_max: 120
homing_speed: 30   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: True
run_current: .25
hold_current: .25
sense_resistor: 0.110
stealthchop_threshold: 500

[stepper_z]
step_pin: PB0
dir_pin: PC5	# Remove the ! if stepper is moving the opposite direction
enable_pin: !PB1
rotation_distance: 8 #for T8x8 lead screw
#rotation_distance: 2 #for T8x2 lead screw
microsteps: 16
endstop_pin: PC2
position_endstop: -.10
position_max: 120
position_min: -1
homing_speed: 10   #Max 100
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: True
run_current: .25
hold_current: 0.25
sense_resistor: 0.110
stealthchop_threshold: 500

[extruder]
step_pin: PB3
dir_pin: PB4	# Remove the ! if stepper is moving the opposite direction
enable_pin: !PD2
rotation_distance: 22.68 #calibrate this value for your individual printer!!
gear_ratio: 50:17
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: NTC 100K beta 3950
#sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 780.0
max_extrude_cross_section: .8
Pressure_advance: 0.0
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: True
run_current: 0.2
hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 500

[heater_bed]
heater_pin: PC12
sensor_type: NTC 100K beta 3950
#sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3
smooth_time: 3.0
max_power: 0.6
#control: pid
min_temp: 0
max_temp: 120
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[printer]
kinematics: corexy
max_velocity: 250
max_accel: 2000
max_z_velocity: 10
max_z_accel: 30
square_corner_velocity: 5.0

[heater_fan hotend_fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
pin: PC9
kick_start_time: 0.5
#depending on your fan, you may need to increase or reduce this value
#if your fan will not start
off_below: 0.13
cycle_time: 0.010

[temperature_sensor pi]
sensor_type: temperature_host

[temperature_sensor chamber]
sensor_type: BME280
i2c_address: 118
i2c_mcu: rpi
i2c_bus: i2c.1
i2c_speed: 100000

[idle_timeout]
timeout: 1800

[homing_override]
axes: z
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
   G28 X Y
   G0 X30 Y0 F3600 
   
   G28 Z
   G0 Z10 F1800
   G0 X60 Y60 Z20 F3600

   # Tool to help adjust bed leveling screws. One may define a
# [bed_screws] config section to enable a BED_SCREWS_ADJUST g-code
# command.
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

[include mainsail.cfg]
[include macros.cfg]

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E280 F1800                  ; quickly load filament to down bowden
   G1 E30 F300                    ; slower extrusion for hotend path
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-380 F1800                 ; retract filament completely
   M82                            ; set extruder to absolute

# Sensor Types
#   "EPCOS 100K B57560G104F"
#   "ATC Semitec 104GT-2"
#   "NTC 100K beta 3950" (Keenovo Heater Pad)
#   "Honeywell 100K 135-104LAG-J01"
#   "NTC 100K MGB18-104F39050L32"
#   "AD595"
#   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 35.109
#*# pid_ki = 1.660
#*# pid_kd = 185.641
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.210
#*# pid_ki = 0.942
#*# pid_kd = 108.378
